AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SL1 Topology Backend - Lambda Functions

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_ENV: !Ref Environment
        CACHE_TABLE: !Ref CacheTable
        DEPLOYMENT_VERSION: "v2.0-parameter-store"
        # Optional overrides (only set if parameters are provided)
        SL1_URL: !If [HasSL1UrlOverride, !Ref SL1UrlOverride, !Ref "AWS::NoValue"]
        CORS_ORIGIN: !If [HasCorsOriginOverride, !Ref CorsOriginOverride, !Ref "AWS::NoValue"]

Parameters:
  Environment:
    Type: String
    Description: Deployment environment (development, staging, production)
    Default: development
    AllowedValues:
      - development
      - staging
      - production
  
  ConfigBucket:
    Type: String
    Description: S3 bucket for configuration files (optional - uses local config if not provided)
    Default: ""
  
  # Optional parameter overrides (use only if needed to override config files)
  SL1UrlOverride:
    Type: String
    Description: Override SL1 GraphQL endpoint URL (optional)
    Default: ""
  
  CorsOriginOverride:
    Type: String
    Description: Override CORS origin (optional)
    Default: ""

Conditions:
  HasSL1UrlOverride: !Not [!Equals [!Ref SL1UrlOverride, ""]]
  HasCorsOriginOverride: !Not [!Equals [!Ref CorsOriginOverride, ""]]

Resources:
  # API Gateway
  TopologyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET, POST, OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        AllowOrigin: "'*'"

  # DynamoDB Cache Table
  CacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sl1-topology-cache-v2
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: cacheKey
          AttributeType: S
      KeySchema:
        - AttributeName: cacheKey
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # Lambda Functions
  GetDevicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/getDevices/
      Handler: index.handler
      Events:
        GetDevices:
          Type: Api
          Properties:
            RestApiId: !Ref TopologyApi
            Path: /devices
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sl1-topology/*'
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: '*'

  GetTopologyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/getTopology/
      Handler: index.handler
      Events:
        GetTopology:
          Type: Api
          Properties:
            RestApiId: !Ref TopologyApi
            Path: /topology
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sl1-topology/*'
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: '*'

  SearchDevicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-functions/searchDevices/
      Handler: index.handler
      Events:
        SearchDevices:
          Type: Api
          Properties:
            RestApiId: !Ref TopologyApi
            Path: /search
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CacheTable
        - Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sl1-topology/*'
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: '*'

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${TopologyApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  
  CacheTableName:
    Description: DynamoDB cache table name
    Value: !Ref CacheTable